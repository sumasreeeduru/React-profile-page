{"version":3,"sources":["InputField.js","SubmitButton.js","components/UserStore.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","className","type","this","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","extendObservable","loading","isLoggedIn","username","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resultForm","alert","msg","console","log","resetForm","Username","setInputValue","onclick","doLogin","App","doLogOut","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03f56381.chunk.js","sourcesContent":["// import logo from './logo.svg';\r\nimport React from 'react';\r\n\r\n\r\nclass InputField extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"InputField\">\r\n      <input \r\n      className='input'\r\n      type={this.props.type}\r\n      placeholder={this.props.placeholder}\r\n      value={this.props.value}\r\n      onChange={(e)=>this.props.onChange(e.target.value)}\r\n    />\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","// import logo from './logo.svg';\r\nimport React from 'react';\r\n\r\n\r\nclass SubmitButton extends React.Component {\r\n  render(){\r\n  return (\r\n    <div className=\"SubmitButton\">\r\n      \r\n        <button className='btn'\r\n           disabled={this.props.disabled}\r\n           onClick={()=> this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { extendObservable }from 'mobx';\r\n\r\nclass UserStore{\r\n    constructor()\r\n    {\r\n        extendObservable(this,{\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username:''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","\r\nimport React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './components/UserStore';\r\nimport { values } from 'mobx';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled:false\r\n\r\n    }\r\n  }\r\n  setInputValue(property,val)\r\n  {\r\n    val=val.trim();\r\n    if(val.length>12)\r\n    {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]:val\r\n    })\r\n  }\r\n  resetForm()\r\n  {\r\n    this.state({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled:false\r\n\r\n    })\r\n  }\r\n  async doLogin()\r\n  {\r\n    if(!this.state.username)\r\n    {\r\n      return;\r\n    }\r\n    if(!this.state.password)\r\n    return;\r\n    this.setState({\r\n      buttonDisabled:true\r\n    })\r\n\r\n    try{\r\n        let res=await fetch('/login',{\r\n          method:'post',\r\n          headers:{\r\n            'Accept':'application/json',\r\n            'Content-Type':'application/json'\r\n\r\n          },\r\n          body: JSON.stringify({\r\n            username:this.state.username,\r\n            password:this.state.password\r\n          })\r\n        });\r\n        let result=await res.json();\r\n        if(result && result.success)\r\n        {\r\n          UserStore.isLoggedIn=true;\r\n          UserStore.username=result.username;\r\n        }\r\n        else{\r\n          if(result && result.success===false)\r\n          {\r\n            this.resultForm();\r\n            alert(result.msg);\r\n          }\r\n        }\r\n\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n  \r\n  render(){\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      Log in\r\n      <InputField \r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.Username ? this.state.username:''}\r\n          onChange={(val)=> this.setInputValue('username',val)}\r\n\r\n      />\r\n      <InputField \r\n          type='text'\r\n          placeholder='Password'\r\n          value={this.state.password ? this.state.password:''}\r\n          onChange={(val)=> this.setInputValue('password',val)}\r\n\r\n      />\r\n      <SubmitButton\r\n        text='Login'\r\n        disabled={this.state.buttonDisabled}\r\n        onclick={()=>this.doLogin()}\r\n        />\r\n\r\n\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport LoginForm from './LoginForm';\nimport UserStore from './components/UserStore';\n// import InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n \n  async componentDidMount()\n  {\n     try{\n      let res=await fetch('/isLoggedIn', {\n        method :'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type':'application/json'\n        }\n      });\n      let result=await res.json();\n      if(result && result.success)\n      {\n        UserStore.loading=false;\n        UserStore.isLoggedIn=true;\n        UserStore.username=result.username;\n      }\n      else\n      {\n        UserStore.loading=true;\n        UserStore.isLoggedIn=false;\n      }\n     }\n     catch(e)\n     {\n         UserStore.loading=false;\n         UserStore.isLoggedIn=false;\n     }\n  }\n\n  async doLogOut()\n{\n   try{\n    let res=await fetch('/logout', {\n      method :'post',\n      headers:{\n        'Accept': 'application/json',\n        'Content-Type':'application/json'\n      }\n    });\n    let result=await res.json();\n    if(result && result.success)\n    {\n     \n      UserStore.isLoggedIn=false;\n      UserStore.username='';\n    }\n    \n   }\n   catch(e)\n   {\n       console.log(e)\n   }\n}\n\n\n\n\n  render(){\n    if(UserStore.loading)\n    {\n      return(\n        <div className=\"App\">\n             <div className=\"container\">\n               Loading...please wait..\n             </div>\n      </div>\n      )\n    }\n    else{\n      if(UserStore.isLoggedIn)\n      {\n        return(\n          <div className=\"app\">\n               <div className=\"container\">\n                 Welcome { UserStore.username }\n                 <SubmitButton \n                    text={'Log out'}\n                    disabled={false}\n                    onClick={ ()=> this.doLogOut() }\n                 />\n               </div>\n        </div>\n        )\n      }\n    }\n  return (\n    <div className=\"app\">\n     <div className=\"container\">\n       <LoginForm />\n     </div>\n    </div>\n  );\n  }\n}\n\n\n\n\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}